import { Center, createStyles } from '@mantine/core';
import { GetStaticProps, NextPage } from 'next';
import Head from 'next/head';
import React from 'react';

import { Card } from '../components/Card/Card';
import { cryptoClient } from '../utils/Crypto';

const useStyles = createStyles(() => ({
  container: {
    aspectRatio: '960/300',
    width: '100vw',
    height: '100vh',
    backgroundRepeat: 'no-repeat',
    backgroundPosition: 'center',
    backgroundSize: 'cover',
    backgroundImage: 'url(icons/blurry-gradient.svg)',
  },
}));

export interface CryptoCurrency {
  name: string;
  ticker: string;
  network: string;
  value: string;
  label: string;
}

interface HomeProps {
  currencies: CryptoCurrency[];
}

const Home: NextPage<HomeProps> = ({ currencies }) => {
  const { classes } = useStyles();

  return (
    <>
      <Head>
        <title>Cryptocurrency Converter</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={classes.container}>
        <Center h="100%" w="100%">
          <Card currencies={currencies} />
        </Center>
      </main>
    </>
  );
};

export const getStaticProps: GetStaticProps<HomeProps> = async () => {
  const { data } = await cryptoClient.get<
    Omit<CryptoCurrency, 'value' | 'label'>[]
  >('/currencies');
  const currencies: CryptoCurrency[] = data
    .filter(
      (value, index, initial) =>
        index === initial.findIndex(element => element.name === value.name),
    )
    .map(value => ({
      ...value,
      value: value.ticker ?? '',
      label: value.name ?? '',
    }));
  return {
    props: {
      currencies,
    },
  };
};

export default Home;
